name: Deploy Bible App to Fly.io

on:
  push:
    branches:
      - main # Trigger deployment only on pushes to the main branch
  workflow_dispatch: # Allows manual triggering from the Actions tab

env:
  FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
  # !!! REPLACE THESE WITH YOUR ACTUAL APP NAMES !!!
  BACKEND_APP_NAME: "your-bible-backend-app-name"
  FRONTEND_APP_NAME: "your-bible-frontend-app-name"

  # Environment variables / Secrets for the backend (will be set via fly secrets)
  LLM_MODEL_NAME: "deepseek/deepseek-chat:free" # Or configure as needed
  OPENROUTER_BASE_URL: "https://openrouter.ai"
  # OPENROUTER_API_KEY is handled as a secret below
  # CORS_ALLOWED_ORIGIN is derived from frontend app name below

jobs:
  deploy:
    name: Deploy Backend and Frontend
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      # --- Setup Flyctl ---
      # Use a specific version tag instead of master for stability
      - uses: superfly/flyctl-actions/setup-flyctl@master
        with:
          version: 0.0.462

      # --- Verify Flyctl Installation (Optional but helpful for debugging) ---
      - name: Verify flyctl installation
        run: flyctl version

      # -------------------------------------
      # Deploy Backend
      # -------------------------------------
      - name: Deploy Backend to Fly.io
        run: |
          # Calculate expected Frontend URL for CORS
          FRONTEND_URL="https://${{ env.FRONTEND_APP_NAME }}.fly.dev"
          echo "Setting CORS for $FRONTEND_URL"

          # Set non-sensitive env vars / secrets via flyctl
          # Ensure OPENROUTER_API_KEY secret is set manually in Fly for this app first!
          echo "Setting backend secrets/env vars..."
          flyctl secrets set LLM_MODEL_NAME="${{ env.LLM_MODEL_NAME }}" CORS_ALLOWED_ORIGIN="$FRONTEND_URL" OPENROUTER_BASE_URL="${{ env.OPENROUTER_BASE_URL }}" --app ${{ env.BACKEND_APP_NAME }} --stage

          # Trigger the deployment using the Dockerfile in the backend directory
          echo "Deploying backend app..."
          flyctl deploy --remote-only --app ${{ env.BACKEND_APP_NAME }} --dockerfile Dockerfile --strategy immediate --detach --stage # Added detach & stage
        working-directory: ./backend # Run fly commands from the backend directory

      # -------------------------------------
      # Deploy Frontend
      # -------------------------------------
      - name: Deploy Frontend to Fly.io
        run: |
          # Calculate Backend URL
          BACKEND_URL="https://${{ env.BACKEND_APP_NAME }}.fly.dev"
          echo "Injecting Backend URL: $BACKEND_URL"

          # Trigger the deployment using the Dockerfile in the frontend directory
          # Pass the backend URL as a build argument
          echo "Deploying frontend app..."
          flyctl deploy --remote-only --app ${{ env.FRONTEND_APP_NAME }} --dockerfile Dockerfile --build-arg REACT_APP_API_URL="$BACKEND_URL" --strategy immediate --detach --stage # Added detach & stage
        working-directory: ./frontend # Run fly commands from the frontend directory

      # --- Monitor Deployments (Optional but Recommended) ---
      # Wait a bit for deployments to potentially start rolling out
      - name: Wait for deployments initiation
        run: sleep 15

      - name: Monitor Backend Deployment
        run: flyctl status --app ${{ env.BACKEND_APP_NAME }} || echo "Backend status check failed or deployment ongoing"

      - name: Monitor Frontend Deployment
        run: flyctl status --app ${{ env.FRONTEND_APP_NAME }} || echo "Frontend status check failed or deployment ongoing"

      # --- Deployment Summary ---
      - name: Deployment Summary
        run: |
          echo "Backend (${{ env.BACKEND_APP_NAME }}) deployment initiated."
          echo "Frontend (${{ env.FRONTEND_APP_NAME }}) deployment initiated."
          echo "Check Fly dashboard or run 'fly status -a <app-name>' locally for progress."
          echo "---"
          echo "Frontend URL: https://${{ env.FRONTEND_APP_NAME }}.fly.dev"
          echo "Backend URL: https://${{ env.BACKEND_APP_NAME }}.fly.dev"